class(res$parameter) <- 'integer'
res
}, Species]})
withCallingHandlers({DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]})-> test
test
?withCallingHandlers
tryCatch({DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]})-> test
?suppressWarnings()
invisible(DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species])
invokeRestart()
invokeRestart(DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species])
getOption('warn')
warning(immediate. = TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnErrList({
DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
warnErrList({
DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
})
warnErrList({
DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
})-> test
test
test2 <- warnErrList({
test1 <- DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
})
test2
test1
?warnErrList
## Regression for each Chick:
ChWtgrps <- split(ChickWeight, ChickWeight[,"Chick"])
sapply(ChWtgrps, nrow)# typically 12 obs.
nlis1 <- lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
lm(weight ~ (Time + I(Time^2)) * Diet, data = DAT)))
nl1 <- warnErrList(nlis1) #-> warning :
## Regression for each Chick:
ChWtgrps <- split(ChickWeight, ChickWeight[,"Chick"])
sapply(ChWtgrps, nrow)# typically 12 obs.
nlis1 <- lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
lm(weight ~ (Time + I(Time^2)) * Diet, data = DAT)))
nl1 <- warnErrList(nlis1) #-> warning :
## 50 times the same error (as Diet has only one level in each group)
stopifnot(sapply(nl1, is.null)) ## all errors --> all replaced by NULL
nlis2 <- lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
lm(weight ~ Time + I(Time^2), data = DAT)))
nl2 <- warnErrList(nlis2)
stopifnot(identical(nl2, nlis2)) # because there was *no* error at all
nlis3 <- lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
lm(weight ~ poly(Time, 3), data = DAT)))
nl3 <- warnErrList(nlis3) # 1 error caught:
stopifnot(inherits(nlis3[[1]], "error")
, identical(nl3[-1], nlis3[-1])
, is.null(nl3[[1]])
)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
res.warn
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ChWtgrps <- split(ChickWeight, ChickWeight[,"Chick"])
warnErrList( DT[, {
res <- cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species], warn = FALSE)
sapply(ChWtgrps, nrow)# typically 12 obs.
lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
lm(weight ~ (Time + I(Time^2)) * Diet, data = DAT)))
nlis1 <- lapply(ChWtgrps, function(DAT) tryCatch(error = identity,
lm(weight ~ (Time + I(Time^2)) * Diet, data = DAT)))
?tryCatch
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
f()
test <- f()
test
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
f)
f())
f()
test <- f()
test
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
tryCatch(1, finally = print("Hello"))
warnings()
unique(warnings())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
op <- options(warn=2)
DT[, {
res <-  cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
op <- options(warn=0)
DT[, {
res <-  cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
op <- options(warn=3)
DT[, {
res <-  cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
op <- options(warn=1)
DT[, {
res <-  cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
DT[, {
res <-  cor.test(Sepal.Length, Sepal.Width, method = 'spearman')
class(res$parameter) <- 'integer'
res
}, Species]
f()
op <- options(warn=0)
f()
options(op)
testit <- function() warning("testit") # function that generates warning.
assign("last.warning", NULL, envir = baseenv()) # clear the previous warning
testit() # run it
if(length(warnings())>0){ # or !is.null(warnings())
print("something happened")
}
warning()
warnings()
source('~/.active-rstudio-document', echo=TRUE)
withWarnings()
withWarnings(2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
option(warn = 1)
options(warn = 1)
source('~/.active-rstudio-document', echo=TRUE)
option(warn = 0)
options(warn = 0)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?warnings
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
last.warning
unique(last.warning)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
invokeRestart()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
last.warning
unique(last.warning)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
baseenv()
env.profile()
source('~/.active-rstudio-document', echo=TRUE)
f2
f2()
?environment()
source('~/.active-rstudio-document', echo=TRUE)
f2()
?withCallingHandlers
source('~/.active-rstudio-document', echo=TRUE)
f2()
source('~/.active-rstudio-document', echo=TRUE)
f2()
source('~/.active-rstudio-document', echo=TRUE)
f2()
class(warnings)
class(warnings())
warnings()
tryCatch(1, finally = print("Hello"))
e <- simpleError("test error")
## Not run:
stop(e)
tryCatch(stop(e), finally = print("Hello"))
tryCatch(stop("fred"), finally = print("Hello"))
## End(Not run)
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
tryCatch(stop("fred"),  error = function(e) e, finally = print("Hello"))
withCallingHandlers({ warning("A"); 1+2 }, warning = function(w) {})
## Not run:
{ withRestarts(stop("A"), abort = function() {}); 1 }
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
demo(error.catching)
?invokeRestart
source('~/.active-rstudio-document', echo=TRUE)
tryCatch.W.E <- function(expr){
W <- NULL
w.handler <- function(w){ # warning handler
W <<- w
invokeRestart("muffleWarning")
}
list(value = withCallingHandlers(tryCatch(expr, error = function(e) e),
warning = w.handler),warning = W)
}
tryCatch.W.E(log(2))
source('~/.active-rstudio-document', echo=TRUE)
f()
tryCatch.W.E(f())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
f4()
source('/rdx/projects/DT.helpers/R/simplifyWarning.R', echo=TRUE)
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, x = 'Sepal.Length', y = 'Sepal.Width', by = 'Species', method = 'kendall')-> test3
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, x = 'Sepal.Length', y = 'Sepal.Width', by = 'Species', method = 'kendall')-> test3
test3
dth_cor(DT, x = 'Sepal.Length', y = 'Sepal.Width', by = 'Species', method = 'spearman')-> test3
test3
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, x = 'Sepal.Length', y = 'Sepal.Width', by = 'Species', method = 'spearman')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
library(DT.helpers)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman')
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
test4
test3
test2
dim(test2)
cor.test(iris, 'Sepal.Length','Sepal.Width')
cor.test(iris, 'Sepal.Length','Sepal.Width', alternative = 'two.sided')
cor.test(iris$Sepal.Length, iris$Sepal.Width)
cor.test(iris$Sepal.Length, iris$Sepal.Width)-> test1
dim(test1)
str(test1)
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
iris
quote(iris)
paste(quote(iris))
x = iris
x
x
x <- substitute(iris)
x
paste0(x)
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'pearson', by = 'Species')
source('~/.active-rstudio-document', echo=TRUE)
simplifyWarning(f4())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
fr()
f4()
f5()
source('~/.active-rstudio-document', echo=TRUE)
library(DT.helpers)
rm(dth_cor)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'pearson', by = 'Species')
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')-> test
test$variables
test$variables[1]
test$variables[2]
source('/rdx/projects/DT.helpers/R/dth_cor_test.R', echo=TRUE)
test$variables[2]
dth_cor(DT, "Sepal.Length", "Sepal.Width", method = 'spearman', by = 'Species')-> test
test$variables
rm(dth_cor)
clear()
clear
library(dth)
library(FSTrnaseq)
library(dth)
library(DT.helpers)
detach('DT.helpes')
detach("package:DT.helpers", unload = TRUE)
remove.packages('DT.helpers', lib = "/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(FSTrnaseq)
get_geneEXP(c('FGF18','WNT7A'))
get_geneEXP(c('FGF18','WNT7A'))-> tmp
mtcars
iris
datasets::ability.cov
datasets::beaver1
tmp
tmp[,unique(project_short_name)]
tmp[,unique(project_short_name)]-> blah
blah[c(20,33)]
tmp[project_short_name %in% blah[c(20,33)]]
tmp[project_short_name %in% blah[c(20,33)]]-> tmp
wilcox.test(WNT7A~project_short_name, tmp)
library(data.table)
melt(tmp, id.vars = colnames(tmp)[1:2], variable.name = 'gene', value.name = 'int')
melt(tmp, id.vars = colnames(tmp)[1:2], variable.name = 'gene', value.name = 'int')-> tmp
tmp[,wilcox.test(WNT7A~project_short_name, .SD), gene]
tmp[,wilcox.test(int~project_short_name, .SD), gene]
source('~/.active-rstudio-document', echo=TRUE)
get_geneEXP(c('FGF18','WNT7A'))-> tmp2
melt(tmp1, id.vars = colnames(tmp)[1:2], variable.name = 'gene', value.name = 'int')-> tmp1
melt(tmp2, id.vars = colnames(tmp)[1:2], variable.name = 'gene', value.name = 'int')-> tmp2
tmp2
tmp2[,aov(int~project_short_name, .SD), gene]
aov(int~project_short_name, tmp2[gene=='FGF18'])
anova(aov(int~project_short_name, tmp2[gene=='FGF18']))
test <- anova(aov(int~project_short_name, tmp2[gene=='FGF18']))
str(test)
test$`Mean Sq`
test[1]
test[1,]
as.data.frame(test[1,])
as.data.frame(test[2,])
as.data.frame(test[2,1:3])
test
test[1,]
as.data.tablle(test[1,])
as.data.table(test[1,])
as.data.table(test[2,])
as.data.table(test[2,1:2])
as.data.table(test[2,1:3])
cbind(test[2,1:3]), test[1,])
cbind(test[2,1:3], test[1,])
cbind(test[2,1:3], test[1,])-> test3
colnames(test3)
cbind( test[1,],test[2,1:3])-> test3
colnames(test3)
colnames(test3)[,c(4,5,1,6,2,7,3,8)]
colnames(test3)[c(4,5,1,6,2,7,3,8)]
aov(int~project_short_name, tmp2[gene=='FGF18'])
test1
test
source('/rdx/projects/dth/R/dth_stats.R', echo=TRUE)
source('/rdx/projects/dth/R/dth_stats.R', echo=TRUE)
tmp
tmp2
dth_aov(int~project_short_name, tmp2, 'gene')
tmp2[gene=='WNT&A']
tmp2[gene=='WNT7A']
aov(int~project_short_name,tmp2[gene=='WNT7A'])
test <- aov(int~project_short_name,tmp2[gene=='WNT7A'])
test
test[1,]
test[1,]
test <- anova(aov(int~project_short_name,tmp2[gene=='WNT7A']))
test
test[1,]
cbind(test[1,], test[2,1:3])
as.data.table(cbind(test[1,], test[2,1:3]))
dim(as.data.table(cbind(test[1,], test[2,1:3])))
colnames(tmp) <- c("F value", "Pr(>F)",
'DF','DF Residuals',
'Sum Sq', "Sum Sq Residuals",
'Mean Sq', 'Mean Sq Residuals')
length(c("F value", "Pr(>F)",
'DF','DF Residuals',
'Sum Sq', "Sum Sq Residuals",
'Mean Sq', 'Mean Sq Residuals'))
tmp <- anova(aov(int~project_short_name,tmp2[gene=='WNT7A']))
tmp <- as.data.table(cbind(tmp[1,]),tmp[2,1:3])[,c(4,5,1,6,2,7,3,8)]
dim(as.data.table(cbind(tmp[1,]),tmp[2,1:3]))
as.data.table(cbind(tmp[1,]),tmp[2,1:3])
tmp[2,]
tmp[2,1:3]
tmp[1,]
dim(tmp[1,])
source('/rdx/projects/dth/R/dth_stats.R', echo=TRUE)
dth_aov(int~project_short_name, tmp2, 'gene')
source('/rdx/projects/dth/R/dth_stats.R', echo=TRUE)
dth_aov(int~project_short_name, tmp2, 'gene')
test
test2
test[1,]
test$`Pr(>F)`
test
test$`Pr(>F)`
test <- aov(int~project_short_name, tmp2[gene=='FGF18'])
test
summary(test)
test <- aov(int~project_short_name, tmp2[gene=='FGF18'])
dth_aov(int~project_short_name, tmp2, 'gene')
iris3
melt(iris)
melt(iris, id.vars = 'Species')
melt(iris, id.vars = 'Species')-> iris2
iris2
dth_aov(value~Species, iris2, 'variable')
source('/rdx/projects/dth/R/dth_stats.R', echo=TRUE)
dth_aov(value~Species, iris2, 'variable')
aov(value~Species+variable, iris2)
anova(aov(value~Species+variable, iris2) )
